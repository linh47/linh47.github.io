{"meta":{"title":"安眠岛","subtitle":"想要听你说 你看见的光 是我","description":null,"author":"Linh","url":"https://linh47.github.io","root":"/"},"pages":[{"title":"categories","date":"2019-03-13T06:17:44.000Z","updated":"2019-03-13T07:06:42.444Z","comments":true,"path":"categories/index.html","permalink":"https://linh47.github.io/categories/index.html","excerpt":"","text":""},{"title":"关于我 About me?Who cares;）","date":"2019-03-13T05:37:23.000Z","updated":"2019-03-18T14:40:06.181Z","comments":true,"path":"about/index.html","permalink":"https://linh47.github.io/about/index.html","excerpt":"","text":"你好啊，居然能在茫茫网络中发现这个小小博客，你真是厉害呢！ 我是谁呢？​ 叫我小哀就行，目前2017-2020中南大学计算机研究生在读。女的。 ​ 研究方向是：推荐算法+复杂网络。 这个博客干嘛的呢？ 我觉得值得分享的内容，会以认真的态度整理并发在这里。 ​ 主要包括Java相关内容，学术研究有关内容，新技能开发，好用物品推荐。 写博客的初衷是： ​ 热爱并拥护程序员的开源精神。我受益于此，也想做一份小小贡献。 ​ 豆瓣里豆油的日记给我的启发也非常多，希望我能好好写东西，记录一下成长吧。 如果你有什么问题可以发邮件给我，联系邮箱：linh47@163.com 我没有斜杠，不太擅长给自己贴标签。日常BB在豆瓣，并不文艺，是个随心所欲的家伙。 人生要义是开心。希望你过得越来越好。 ——————————English Version 相当正经的介绍；)—————————— Hello.Welcome to linh’s blog.I’m a 24 year-old girl (it doesn’t mean anything, but there are always someone think I’m a boy). I am a graduate student in computer science at Central South University,and I will graduate in June 2020.By the way,Central South University is located in Changsha, China. My research area is recommendation algorithms and complex networks. This blog is designed to share my personal insights, including Java articles, understanding of academic research papers, ways to develop new skills, and what I like most recently. If you are interested in my computer science articles and want to get resources and codes, you can follow me on github. The link is https://github.com/linh47. If you would like to contact me, please send an email to linh47@163.com. I hope you have a wonderful day. ；）"}],"posts":[{"title":"论文笔记-LPAwb+和DIRTLPAwb+","slug":"论文笔记-LPAwb+和DIRTLPAwb+","date":"2019-03-17T13:43:56.454Z","updated":"2019-03-18T14:07:23.129Z","comments":true,"path":"论文笔记-LPAwb+和DIRTLPAwb+/","link":"","permalink":"https://linh47.github.io/论文笔记-LPAwb+和DIRTLPAwb+/","excerpt":"本篇为论文Improved community detection in weighted bipartite networks的阅读笔记。该论文为复杂网络领域的社区发现算法，于2016年发表于 Royal Society open science（impact factor 2.5)。","text":"本篇为论文Improved community detection in weighted bipartite networks的阅读笔记。该论文为复杂网络领域的社区发现算法，于2016年发表于 Royal Society open science（impact factor 2.5)。Beckett S J. Improved community detection in weighted bipartite networks[J]. Royal Society open science, 2016, 3(1): 140536. 概述：​ 这篇论文于2016年发表于 Royal Society open science（impact factor 2.5)。 ​ 论文改进了LPAb+算法（LPAb+改进自LPA标签传播算法），用于二分加权网络上的社区划分。作者Beckett 提出了LPAwb+和DIRTLPAwb+两种算法。其中DIRTLPAwb+是对LPAwb+的使用改进算法。 ​ 所用数据集： 生成网络（800个）【QuanBiMo、LPAwb+、DIRTLPAwb+在每个网络上跑一次，取最好结果】 ​ 生成参数： ​ 行节点数30 列节点数50 ​ 社区数 2或10 ​ 社区边权重随机，服从偏态负二项分布 （skewed negative binomial distribution） ​ 分散参数 (0.5,2.5)，平均值为4 ​ 噪声noise=0,0.01,0.25,0.5 23种plant-pollinator网络【LPAwb+、DIRTLPAwb+在每个网络上跑100次，取最好结果】 ​ 下载地址： ​ https://www.nceas.ucsb.edu/interactionweb/resources.html#plant_pollinator ​ 论文LPAwb+源代码： ​ https://github.com/sjbeckett/weighted-modularity-LPAwbPLUS ​ 对比算法： ​ QuanBiMo ​ 评价指标： ​ 检测出的社区数占已知社区数的比率 ​ 改进的模块度 ​ NMI 亮点：​ 模块度改进了Barber’s Modularity，使其适用于加权二分网络。 ​ LPAwb+速度快，适用于大型网络。 ​ DIRTLPAwb+虽然也依赖输入参数，但是它的参数比QuanBiMo更有意义，表现更稳定，而且结果不比LPAwb+差。 一句话总结： ​ LPAwb+容易陷入次最优化的情况，它也依赖于初始化的标签，但他的速度占优势。 ​ DIRTLPAwb+从miu个标签中随机选择作为初始化标签，计算了多次LPAwb+，返回最好的结果。速度肯定比单次LPAwb+慢，但是表现接近LPAwb+，优于QuanBiMo。 ​ LPAwb+和DIRTLPAwb+都受网络的社区数的影响，也受社区之间节点连接程度的影响。 详解QuanBiMo ​ 第一个考虑权重的适用于二分网络的基于最大化模块度的社区发现算法 ​ 在多层随机网络上使用模拟退火算法 LPAb+ ​ 标签传播算法+多步合并。时间复杂度小，社区发现结果较好，但是没考虑权重。 模块度 Barber’s Modularity 二分网络的两种不同类型的节点可以分在同一个社区。 ​ 注：Guimera’s模块度就是不同类的节点不会划分到一个社区中。 ​ 公式： 改进的适用于加权网络的Barber’s Modularity 用来跟其他算法做比较而标准化的模块度 二分网络和加权网络都能用的模块度","categories":[{"name":"搞学术","slug":"搞学术","permalink":"https://linh47.github.io/categories/搞学术/"},{"name":"复杂网络-社区发现","slug":"搞学术/复杂网络-社区发现","permalink":"https://linh47.github.io/categories/搞学术/复杂网络-社区发现/"}],"tags":[{"name":"复杂网络","slug":"复杂网络","permalink":"https://linh47.github.io/tags/复杂网络/"},{"name":"社区发现","slug":"社区发现","permalink":"https://linh47.github.io/tags/社区发现/"},{"name":"二分网络","slug":"二分网络","permalink":"https://linh47.github.io/tags/二分网络/"},{"name":"complex networks","slug":"complex-networks","permalink":"https://linh47.github.io/tags/complex-networks/"},{"name":"bipartite networks","slug":"bipartite-networks","permalink":"https://linh47.github.io/tags/bipartite-networks/"},{"name":"community detection","slug":"community-detection","permalink":"https://linh47.github.io/tags/community-detection/"},{"name":"LPA","slug":"LPA","permalink":"https://linh47.github.io/tags/LPA/"}]},{"title":"给博客加上背景音乐吧","slug":"给博客加上背景音乐吧","date":"2019-03-13T17:05:23.000Z","updated":"2019-03-18T09:35:19.881Z","comments":true,"path":"给博客加上背景音乐吧/","link":"","permalink":"https://linh47.github.io/给博客加上背景音乐吧/","excerpt":"介绍在博客中加入网易云音乐播放器的方法。","text":"介绍在博客中加入网易云音乐播放器的方法。 我是一个很爱听随机歌的人，没有歌总觉得少了什么。 于是给博客加上了播放器~~~ 查了一下，侧边栏是通过网易云的外链播放器iframe实现的，文章内则靠hexo的两个插件实现。 1、侧边栏播放器增加BGM栏，步骤跟其他的widget差不多 hueman的配置文件12widgets:- mymusic zh-CN加上翻译1mymusic: &apos;背景音乐&apos; layout的widget里面加ejs文件12345678&lt;% if (site.tags.length) &#123; %&gt; &lt;div class=&quot;widget-wrap widget-list&quot;&gt; &lt;h3 class=&quot;widget-title&quot;&gt;&lt;%= __(&apos;BGM&apos;) %&gt;&lt;/h3&gt; &lt;div class=&quot;widget&quot;&gt; &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=300 height=450 src=&quot;//music.163.com/outchain/player?type=0&amp;id=884698131&amp;auto=1&amp;height=430&quot;&gt;&lt;/iframe&gt; &lt;/div&gt; &lt;/div&gt;&lt;% &#125; %&gt; 重点就是ejs文件里的啦，这个生成非常简单。 打开网易云音乐的网页版，找到喜欢的单曲或者歌单，只要不收钱的不要版权的都可以导出外链播放器。 选择iframe形式的，自己选个大小，稍微调一下就可以复制到自己的ejs文件里啦。 我的大小是300宽，450高。auto=1是自动播放，0就是手动播放。 有的能生成播放器的也未必播放得了，在网易云插件就可以试出来。 2、文章内播放器使用hexo的插件hexo-tag-aplayer ​ 安装 1npm install --save hexo-tag-aplayer ​ 可以把音乐放到之前提到过的文章的资源文件夹里，有相对路径可以引用 1&#123;% aplayer &quot;如常&quot; &quot;房东的猫&quot; &quot;房东的猫-如常.flac&quot; &quot;ruchang.jpg&quot; &quot;lrc:房东的猫-如常.lrc&quot; %&#125; [00:00.00] 作曲 : 少年佩 [00:01.00] 作词 : 一只然 [00:11.10]制作人/编曲/弦乐编写 : 樊哲忠 [00:13.24]监制 : 李纤橙 [00:14.74]主唱/和声 : 红鼻子小黑 [00:16.44]弦乐 : 国际首席爱乐团 [00:17.93]打击乐 : 陳柏州 [00:19.03]录音师 : 汝文博 [00:20.23]录音室 : BIG J Studio Beijing [00:21.53]混音師 : 赵靖 [00:31.90]很多时候你一个人习惯了 [00:35.94]就无法给与嘱托 [00:40.53]你习惯了如风般不结伴穿梭 [00:46.37]影子都没留片刻 [00:52.53]很多时候你一个人常常是 [00:56.12]只考虑一个人的 [01:00.91]你独舞喜怒哀乐任光阴如何 [01:06.35]任光阴如何收割 [01:13.23]你就是如此令人神往的角色 [01:17.97]在造物主的手中不拘一格 [01:23.41]锋利中带着柔和 [01:27.90]柔和里伴随冷落 [01:33.49]你就有如此不可多得的神色 [01:37.83]你每种表情无需费力把我俘获 [01:44.56]平静里带着谴责 [01:47.90]谴责却没有愠火 [02:10.45]很多时候你一个人厌倦了 [02:14.39]序列有秩的生活 [02:19.13]你厌倦同一班车被夕阳吞没 [02:24.72]却怨的不动声色 [02:34.15]很多时候你一个人就这么 [02:38.69]跳入了一扇沉默 [02:44.08]看起来属于陌生或属于暮色 [02:49.66]却不是属于谁的 [02:57.45]你就是如此令人神往的角色 [03:01.14]在造物主的手中不拘一格 [03:07.02]锋利中带着柔和 [03:11.46]柔和里伴随冷落 [03:17.25]你就有如此不可多得的神色 [03:21.39]你每种表情无需费力把我俘获 [03:28.08]平静里带着谴责 [03:31.17]谴责却没有愠火 [04:17.40]你就是如此令人神往的角色 [04:22.44]在造物主的手中不拘一格 [04:27.88]锋利中带着柔和 [04:32.32]柔和里伴随冷落 [04:37.80]你就有如此不可多得的神色 [04:42.39]你每种表情无需费力把我俘获 [04:48.73]平静里带着谴责 [04:52.07]谴责却没有愠火 [04:58.26]你告别该有的脆弱 [05:03.15]你放生无罪的困惑 [05:08.19]你沿着真心一路上 [05:11.78]化作未染的清澈 var ap = new APlayer({ element: document.getElementById(\"aplayer-rrOMshrK\"), narrow: false, autoplay: false, showlrc: 2, music: { title: \"如常\", author: \"房东的猫\", url: \"房东的猫-如常.flac\", pic: \"/给博客加上背景音乐吧/ruchang.jpg\", lrc: \"房东的猫-如常.lrc\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 《如常》我是买了的啦~~~强烈安利房东的猫，虽然现在已经不算小众了哈哈哈。听现场唱歌好舒服啊啊啊~两个妹子都是干干净净非常美好。","categories":[{"name":"computer science计算机技术","slug":"computer-science计算机技术","permalink":"https://linh47.github.io/categories/computer-science计算机技术/"},{"name":"blog set up博客搭建","slug":"computer-science计算机技术/blog-set-up博客搭建","permalink":"https://linh47.github.io/categories/computer-science计算机技术/blog-set-up博客搭建/"}],"tags":[{"name":"BGM","slug":"BGM","permalink":"https://linh47.github.io/tags/BGM/"},{"name":"网易云音乐","slug":"网易云音乐","permalink":"https://linh47.github.io/tags/网易云音乐/"}]},{"title":"hexo使用本地图片","slug":"hexo使用本地图片","date":"2019-03-13T14:25:30.000Z","updated":"2019-03-18T09:34:30.961Z","comments":true,"path":"hexo使用本地图片/","link":"","permalink":"https://linh47.github.io/hexo使用本地图片/","excerpt":"介绍在MD文档中插入本地图片的方法。","text":"介绍在MD文档中插入本地图片的方法。 1、hexo的配置文件post_asset_folder:true 意思是每新建一个文档，就生成一个文件夹用来放对应的资源 2、下载插件在hexo的目录下执行npm install https://github.com/CodeFalling/hexo-asset-image --save 3、图片放在文档的文件夹下4、在MD文档中引用本地图片其实使用的是hexo的标签 1&#123;% asset_img wallhaven-681094.png 壁纸示例%&#125;","categories":[{"name":"computer science计算机技术","slug":"computer-science计算机技术","permalink":"https://linh47.github.io/categories/computer-science计算机技术/"},{"name":"blog set up博客搭建","slug":"computer-science计算机技术/blog-set-up博客搭建","permalink":"https://linh47.github.io/categories/computer-science计算机技术/blog-set-up博客搭建/"}],"tags":[]},{"title":"教你一天搭建一个免费的个人博客","slug":"12/教你一天搭建一个免费的个人博客","date":"2019-03-13T09:40:11.871Z","updated":"2019-03-18T09:33:40.709Z","comments":true,"path":"12/教你一天搭建一个免费的个人博客/","link":"","permalink":"https://linh47.github.io/12/教你一天搭建一个免费的个人博客/","excerpt":"介绍使用github pages和hexo搭建个人博客的方法。","text":"介绍使用github pages和hexo搭建个人博客的方法。 前言​ 不知道你们有没有跟我一样的感觉，我想总结学到的东西和经验，通过写作练习正确表达自己的想法，教别人的同时也会逼着自己去学懂一件事情；也不是作为自媒体想运营获得收入或者出名，只是想记录一些比较私人化的东西。 怀着一腔鸡血，结果我发现没有合适的平台可以自由地写作。 社恐患者其实也很怕没有意义的互动，对点赞转发评论的回复是很耗费精力的。 创建自己的公众号太麻烦，填许多资料还要每年交300块保护费，公众号内容还需要被审核，一些想法被平时熟悉的人知道也有点不好意思。 普通的博客平台比如CSDN、新浪等，社交性太强，有大量广告和自由度有限的博客模板。 昨天搜到了github Pages，发现经过不是非常复杂的操作，就能拥有一个免费、无限流量、还能部分自定义网址（前缀）又不需要购买域名和域名备案的个人博客。实际上Github Pages能实现的不仅仅是博客，简直就可以作为你的个人网站来使用。你可以控制它看起来是什么样子，有许多好看的主题可以挑选，功能块自己能够定义，也可以充满安全感地写作。 你所需要的不过是跟着教程一步步做下来，就能得到你的个人博客啦。 如果你感兴趣的话，就继续看吧。 需要一点点计算机操作的基础，比如cmd命令行怎么用，如何科学地打开你想要的网站，如何在官方渠道下载安全的安装软件，如何使用git和github。这些都很容易搜到的。 所需工具 GitHub Pages Nodejs npm Hexo Typora 主要步骤 https://pages.github.com/ 跟着官方流程把github Pages搭好。 https://hexo.io/zh-cn/ 跟着官方教程下载所需的组件，安装hexo。 使用hexo进行对应页面的创建。 安装好hexo对应的git插件。 使用hexo部署到你的github pages。 使用Typora进行MD文档的编辑。 Hexo部分hexo的配置文件yaml格式非常严格，空格不能少，也必须是英文。编码必须是UTF-8，不能带BOM。 修改yaml部分用notepad++。 记录一下部署的配置格式，每个冒号后面必须跟一个空格。 1234deploy: type: git repository: https://github.com/linh47/linh47.github.io.git branch: master Hexo常用命令： 含义 命令 简写 新建文档或页面 hexo new [page] “标题” hexo n xxx 清除已经生产的静态页面（public文件夹） hexo clean hexo c 重新生成静态页面 hexo generate hexo g 启动本地服务器 hexo server hexo s 部署到远程服务器(github) hexo deploy hexo d 主题部分hexo提供了多样化的主题可供选择。https://hexo.io/themes/ 我喜欢的是hueman主题。以下是设置主题的参考。 Hueman主题官方文档：https://github.com/ppoffice/hexo-theme-hueman/wiki 可参考文档：https://arvinsir.com/2017/05/19/hexo-themes-hueman/ 使用步骤 clone到hexo的theme文件夹下。 https://github.com/ppoffice/hexo-theme-hueman.git hexo的配置文件中theme 改成hueman。 修改hueman的配置文件，刚clone的后缀.example要删掉。 配置主题 ​ 修改语言：hexo的配置文件中 language改成zh-CN ​ 修改页面头、脚：hueman/source/css/_partial/header.styl和footer.styl文件 。 ​ 图片路径：hueman/source/css/images ​ logo大小：hueman的配置文件中 12345customize: logo: width: 165 height: 60 url: images/logo-header.png ​ 显示网站访问量： ​ 在hueman/layout/common/footer.ejs添加两句。注意编码！utf-8。 1&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; 12&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;本站总访问量为：&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt; 配置网站的语言 ​ hueman的配置文件中全部写英文，在language文件夹下的zh-CN.yml增加对应的中文翻译。 ​ 123456789index: home: &apos;主页&apos; about: &apos;关于&apos; search: &apos;搜索&apos; archive: &apos;归档&apos; category: &apos;分类&apos; uncategorized: &apos;未分类&apos; tag: &apos;标签&apos; lifestyle: &apos;生活方式&apos; 网站的菜单与目录： hexo的配置文件中有category_dir: categories。hexo下面的source有categories文件夹就可以。 **hueman的配置里，菜单项就不用一个个写了！！！hueman的菜单栏应该不包括文章的具体分类项。 文章直接在开头写categories和tags就可以了！ 文章的分类（hueman最多支持2级）和标签 在MD文件的最前面加 12345678---title: 博客是怎么从0到1的date: 2019-03-12 21:58:36tags: blogcategories: - ittech - blog--- 补充： 在站点目录 /scaffolds/post.md 文件中添加一项categories，这样每次新建博客文章 new 出来的 .md 文件就都带 categories 了 如果generate报错，用notepad++打开MD检查开头的格式。 在typora软件里面，— 和 — 会自动省略，显示成灰色的就可以了，不用再手动加上去。","categories":[{"name":"computer science计算机技术","slug":"computer-science计算机技术","permalink":"https://linh47.github.io/categories/computer-science计算机技术/"},{"name":"blog set up博客搭建","slug":"computer-science计算机技术/blog-set-up博客搭建","permalink":"https://linh47.github.io/categories/computer-science计算机技术/blog-set-up博客搭建/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://linh47.github.io/tags/blog/"},{"name":"hueman","slug":"hueman","permalink":"https://linh47.github.io/tags/hueman/"},{"name":"hexo","slug":"hexo","permalink":"https://linh47.github.io/tags/hexo/"},{"name":"github pages","slug":"github-pages","permalink":"https://linh47.github.io/tags/github-pages/"}]},{"title":"让谷歌检索到你的个人博客","slug":"让谷歌检索到你的个人博客","date":"2019-03-13T09:16:16.000Z","updated":"2019-03-18T09:34:10.945Z","comments":true,"path":"让谷歌检索到你的个人博客/","link":"","permalink":"https://linh47.github.io/让谷歌检索到你的个人博客/","excerpt":"介绍能够让搜索引擎收录你的个人博客并提供检索内容的方法。","text":"介绍能够让搜索引擎收录你的个人博客并提供检索内容的方法。刚搭建完博客能够访问的时候，我以为随便百度谷歌都能搜到我写的东西了，屁颠屁颠搜了下，一点相关的都没有，然后看了教程才知道，想让自己的网站被检索，还需要上谷歌填写资料。 检查是否被收录的方法： 方法：打开百度或谷歌搜索，在搜索框里输入 1site:你的博客地址 如果显示 尝试使用 Google Search Consolewww.google.com/webmasters/ 您对 linh47.github.io 是否具有所有权？请从 Google 获取索引和排名数据。 就是还不能被搜索引擎检索到呢。 那么记录一下怎样让谷歌检索到自己个人博客的方法吧！ 1、生成自己网站的站点地图这个站点地图很多地方都要用到，值得一做。 先安装自动生成插件 12npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save 在hexo的配置文件中添加 12345# 自动生成sitemapsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml 配置好了以后执行一下 hexo g，就能在博客文件\\public目录下找到中生成的sitemap.xml和baidusitemap.xml了。 2、提交网站信息，设置html的meta标记你想让谷歌检索你的博客，首先要证明这个网站你有所有权，也就是你可以更改网站的内容。 有几种验证方法，由于hexo经常会把生成的静态文件clean掉，所以我们用在主题的头文件中添加html的meta标记的方法，一劳永逸。 https://www.google.com/webmasters/ https://ziyuan.baidu.com/site 先跟着网址指引一步步填写信息。 然后复制网址提供给你验证的meta html的meta放在hueman里面的head.ejs文件里面哦。 填好以后要先重新部署才能进行验证。 3、验证所有权后就可以提交站点地图站点地图的意义在于搜索引擎能够更好地抓取网站的内容。 根据对应搜索引擎的提示，谷歌提交sitemap.xml，百度提交baidusitemap.xml就可以了。 4、检索生效期都设置好了以后并不能马上就搜到自己的博客内容，因为要等搜索引擎更新他的索引。","categories":[{"name":"computer science计算机技术","slug":"computer-science计算机技术","permalink":"https://linh47.github.io/categories/computer-science计算机技术/"},{"name":"blog set up博客搭建","slug":"computer-science计算机技术/blog-set-up博客搭建","permalink":"https://linh47.github.io/categories/computer-science计算机技术/blog-set-up博客搭建/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://linh47.github.io/tags/blog/"},{"name":"Google","slug":"Google","permalink":"https://linh47.github.io/tags/Google/"},{"name":"search engine","slug":"search-engine","permalink":"https://linh47.github.io/tags/search-engine/"}]},{"title":"在hueman上应用博客评论插件gitalk","slug":"博客评论插件gitalk","date":"2019-03-13T08:53:42.000Z","updated":"2019-03-18T09:35:01.608Z","comments":true,"path":"博客评论插件gitalk/","link":"","permalink":"https://linh47.github.io/博客评论插件gitalk/","excerpt":"介绍在hueman主题的博客中欧应用gitalk评论插件的方法。","text":"介绍在hueman主题的博客中欧应用gitalk评论插件的方法。 Hueman主题已经封装好了很多评论插件，直接在配置文件中设置就好。 gitalk插件是在博客对应的github仓库下创建对应的issue作为评论，评论者只需要登录自己的github就可以评论，所以需要仓库管理者设置好网站对应github的登录认证权限。 第一次打开文章的时候评论区加载比较慢，因为正在github上创建issue。 1、设置github认证https://github.com/settings/applications/1029202 创建新app，Homepage URL和Authorization callback URL都必须是一样的，目前用的是github的博客地址https://linh47.github.io/ 保存Client ID和Client Secret，配置的时候需要用到。 2、打开hueman主题的配置文件,设置Gitalk对应的属性gitalk: on: true # enter true to enable gitalk owner: linh47 # GitHub user name repo: linh47.github.io # GitHub repository name client_id: 填自己的 # OAuth application client id client_secret: 填自己的 # OAuth application client secret admin: linh47 # GitHub repo owner and collaborators who can initialize github issues # Can either be a string or an array. 3、部署​ 在本地服务器上是没办法测试评论功能的，要部署到github以后才能测试。因为登录的时候会发送请求到你填写的回调地址，也就是博客地址。本地服务器是访问不了的。 ​ 目前发现第一次评论要管理员先登录。","categories":[{"name":"computer science计算机技术","slug":"computer-science计算机技术","permalink":"https://linh47.github.io/categories/computer-science计算机技术/"},{"name":"blog set up博客搭建","slug":"computer-science计算机技术/blog-set-up博客搭建","permalink":"https://linh47.github.io/categories/computer-science计算机技术/blog-set-up博客搭建/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://linh47.github.io/tags/blog/"},{"name":"gitalk","slug":"gitalk","permalink":"https://linh47.github.io/tags/gitalk/"},{"name":"hueman","slug":"hueman","permalink":"https://linh47.github.io/tags/hueman/"}]}]}